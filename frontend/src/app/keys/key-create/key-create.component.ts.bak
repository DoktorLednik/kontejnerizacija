import {Component, OnInit} from '@angular/core';
import {FormControl, FormGroup, Validators} from "@angular/forms";
import {KeysService} from "../key.service";
import {ActivatedRoute, ParamMap} from "@angular/router";
import { Key } from '../key.model';
import  { mimeType } from './mime-type.validator'

@Component({
  selector: 'app-key-create',
  templateUrl: './key-create.component.html',
  styleUrls: ['./key-create.component.css']
})
export class KeyCreateComponent implements OnInit {
  enteredTitle = '';
  enteredContent = '';
  key: Key;
  isLoading = false;
  form: FormGroup;
  imagePreview: string;
  private mode = 'create';
  private keyId: string;

  constructor(public keysService: KeysService, public route: ActivatedRoute) {}

  ngOnInit() {
    this.form = new FormGroup({
      'title': new FormControl(null,
        { validators: [Validators.required, Validators.minLength(3)]
        }),
      'content': new FormControl(null, {validators: [Validators.required] }),
      'image': new FormControl(null, {validators: [Validators.required], asyncValidators: [mimeType]})
    });
    this.route.paramMap.subscribe((paramMap: ParamMap) => {
      if (paramMap.has('keyId')) {
        this.mode = 'edit';
        this.keyId = paramMap.get('keyId');
        this.isLoading = true;
        this.keysService.getKey((this.keyId)).subscribe(keyData => {
          this.isLoading = false;
          this.key = {
            id: keyData._id,
            title: keyData.title,
            content: keyData.content,
            imagePath: keyData.imagePath
          };
          this.form.setValue({
            'title': this.key.title,
            'content': this.key.content,
            'image:': this.key.imagePath
            });
        });
      } else {
        this.mode = 'create';
        this.keyId = null;
      }
    });
  }

  onImagePicked(event: Event) {
    const file = (event.target as HTMLInputElement).files[0];
    this.form.patchValue({image: file});
    this.form.get('image').updateValueAndValidity();
    const reader = new FileReader();
    reader.onload = () => {
      this.imagePreview = reader.result as string;
    };
    reader.readAsDataURL(file);
  }

  onSaveKey() {
    if (this.form.invalid) {return;}
    this.isLoading = true;
    if (this.mode === 'create') {
      this.keysService.addKey(this.form.value.title, this.form.value.content, this.form.value.image);
      } else {
      this.keysService.updateKey(this.keyId, this.form.value.title, this.form.value.content, this.form.value.image);
    }

    this.form.reset();
  }
}
